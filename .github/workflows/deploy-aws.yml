name: Deploy to AWS

run-name: ${{ github.event_name == 'repository_dispatch' && format('[{0}] {1}', github.event.client_payload.ref, github.event.client_payload.commit_message) || format('Deploy to AWS ({0})', github.ref_name) }}

on:
  push:
    branches:
      - main
      - dev
  pull_request:
  repository_dispatch:
    types: [deploy-main]

permissions:
  contents: read
  packages: write

jobs:
  push_to_registry:
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.digest.outputs.digest }}
    steps:
      - name: Display deployment info
        if: github.event_name == 'repository_dispatch'
        run: |
          echo "ðŸš€ **Deployment triggered by sync workflow**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Details:**" >> $GITHUB_STEP_SUMMARY
          echo "- Branch: \`${{ github.event.client_payload.ref }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Commit: \`${{ github.event.client_payload.commit_hash }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Message: ${{ github.event.client_payload.commit_message }}" >> $GITHUB_STEP_SUMMARY
          echo "- Triggered by: ${{ github.event.client_payload.triggered_by }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'repository_dispatch' && 'main' || github.ref }}
      - name: Log in to the container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/convos-backend
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: push
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Set digest output
        id: digest
        run: echo "digest=${{ steps.push.outputs.digest }}" >> $GITHUB_OUTPUT

  deploy_dev:
    name: Deploy new images to infra
    runs-on: ubuntu-latest
    needs: push_to_registry
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy Testnet
        uses: xmtp-labs/terraform-deployer@v1
        timeout-minutes: 20
        with:
          timeout: 20m
          terraform-token: ${{ secrets.TERRAFORM_TOKEN }}
          terraform-org: xmtp
          terraform-workspace: convos_dev
          variable-name: api_image
          variable-value: "ghcr.io/ephemerahq/convos-backend@${{ needs.push_to_registry.outputs.digest }}"
          variable-value-required-prefix: "ghcr.io/ephemerahq/convos-backend@sha256:"

  deploy_prod:
    name: Deploy new images to infra
    runs-on: ubuntu-latest
    needs: push_to_registry
    if: github.ref == 'refs/heads/main' || (github.event_name == 'repository_dispatch' && github.event.client_payload.ref == 'main')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'repository_dispatch' && 'main' || github.ref }}
      - name: Deploy Testnet
        uses: xmtp-labs/terraform-deployer@v1
        timeout-minutes: 20
        with:
          timeout: 20m
          terraform-token: ${{ secrets.TERRAFORM_TOKEN }}
          terraform-org: xmtp
          terraform-workspace: convos_prod
          variable-name: api_image
          variable-value: "ghcr.io/ephemerahq/convos-backend@${{ needs.push_to_registry.outputs.digest }}"
          variable-value-required-prefix: "ghcr.io/ephemerahq/convos-backend@sha256:"
